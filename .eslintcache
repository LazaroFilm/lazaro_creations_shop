[{"/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/index.js":"1","/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/reportWebVitals.js":"2","/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/App.js":"3","/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/AppBar.js":"4","/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/ItemPrev.js":"5","/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/ItemsGrid.js":"6","/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/ItemDetails.js":"7","/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/reducer.js":"8"},{"size":528,"mtime":1611884116287,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611860345608,"results":"11","hashOfConfig":"10"},{"size":1370,"mtime":1611960394773,"results":"12","hashOfConfig":"10"},{"size":6313,"mtime":1611950286875,"results":"13","hashOfConfig":"10"},{"size":1202,"mtime":1611960109255,"results":"14","hashOfConfig":"10"},{"size":3087,"mtime":1612037938349,"results":"15","hashOfConfig":"10"},{"size":996,"mtime":1611947781514,"results":"16","hashOfConfig":"10"},{"size":347,"mtime":1611960167436,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1qftggi",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/index.js",[],["37","38"],"/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/reportWebVitals.js",[],"/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/App.js",[],"/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/AppBar.js",[],"/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/ItemPrev.js",[],["39","40"],"/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/ItemsGrid.js",["41","42"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  ListSubheader,\n  IconButton,\n  Backdrop,\n} from \"@material-ui/core\";\n// import InfoIcon from \"@material-ui/icons/Info\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\n// import tileData from \"./tileData\";\nimport ItemPrev from \"./ItemPrev\";\n// import image from \"./pro_level.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     description: 'description',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n\n  async function fetchData() {\n    const response = await fetch(url)\n      .then((item) => item.json())\n      .then((res) => setData(res.item));\n    console.log(data);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [url]);\n  return data;\n};\n\nexport default function TitlebarGridList() {\n  const tileData = useFetch(\"http://localhost:3001/api/getItem\");\n  const classes = useStyles();\n\n  // Open/Close the backdrop\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n  if (tileData) {\n    console.log(tileData);\n    return (\n      <div className={classes.root}>\n        <GridList cellHeight={180} className={classes.gridList}>\n          <GridListTile key=\"Subheader\" cols={2} style={{ height: \"auto\" }}>\n            <ListSubheader component=\"div\">\n              3D printed camera accessories for Steadicam and camera operators\n            </ListSubheader>\n          </GridListTile>\n          {tileData.map((tile) => (\n            <GridListTile key={tile.title}>\n              <img src={tile.img} alt={tile.title} />\n              <GridListTileBar\n                title={tile.title}\n                subtitle={<span>{tile.description}</span>}\n                actionIcon={\n                  <IconButton\n                    aria-label={`info about ${tile.title}`}\n                    className={classes.icon}\n                    onClick={handleToggle}\n                  >\n                    <AddCircleIcon />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n        <Backdrop\n          className={classes.backdrop}\n          open={open}\n          onClick={handleClose}\n        >\n          <ItemPrev />\n        </Backdrop>\n      </div>\n    );\n  } else {\n    return <div>loading...</div>;\n  }\n}\n","/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/ItemDetails.js",[],"/Users/victorlazaro/Documents/GitHub/lazaro_creations_shop/src/reducer.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":61,"column":11,"nodeType":"51","messageId":"52","endLine":61,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":69,"column":6,"nodeType":"55","endLine":69,"endColumn":11,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],["57"],["58"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [fetchData, url]",{"range":"62","text":"63"},[1431,1436],"[fetchData, url]"]